/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
    macros {
        ctrl_shift: ctrl_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_SHIFT>, <&macro_press>;

            label = "CTRL_SHIFT";
        };

        alt_shift: alt_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp LEFT_SHIFT>, <&macro_press>;

            label = "ALT_SHIFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
            // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
            // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
            // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  RET   |
            // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  | SPACE  |                    |  SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |

            bindings = <
&kp GRAVE         &kp N1        &kp N2    &kp N3  &kp N4       &kp N5                                        &kp N6       &kp N7       &kp N8             &kp N9          &kp N0        &kp DEL
&kp ESCAPE        &kp Q         &kp W     &kp E   &kp R        &kp T                                         &kp Y        &kp U        &kp I              &kp O           &kp P         &kp BSPC
&kp TAB           &kp A         &kp S     &kp D   &kp F        &kp G                                         &kp H        &kp J        &kp K              &kp L           &kp SEMI      &kp SQT
&kp LSHFT         &kp Z         &kp X     &kp C   &kp V        &kp B        &kp K_CALCULATOR    &tog 4       &kp N        &kp M        &kp COMMA          &kp PERIOD      &kp UP_ARROW  &kp RET
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LALT  &mo 3   &lt 2 SPACE  &lt 2 SPACE  &lt 2 SPACE         &lt 1 SPACE  &lt 1 SPACE  &lt 1 SPACE  &kp RIGHT_CONTROL  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT
            >;
        };

        lower_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |      |      |      |      |      |      |                                  |      |      |      |      |      |      |
            // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &   |  *   |  (   |  )   |      |
            // |      |      |      |      |      |      |                                  |      |  _   |  +   |  {   |  }   | PIPE |
            // |      |      |      |      |      |      |  (   |                    |  )   |      |      |      | HOME | END  |      |
            // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |

            bindings = <
&trans     &trans    &trans  &trans    &trans    &trans                       &trans     &trans     &trans     &trans    &trans        &trans
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR      &kp DELETE
&trans     &trans    &trans  &trans    &trans    &trans                       &trans     &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC      &kp PIPE
&trans     &trans    &trans  &trans    &trans    &trans     &trans    &trans  &trans     &trans     &trans     &trans    &kp QUESTION  &trans
&trans     &trans    &trans  &trans    &trans    &trans     &trans    &trans  &trans     &trans     &trans     &trans    &trans        &trans
            >;
        };

        raise_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |       |       |       |       |       |                                    |       |       |       |       |       |       |
            // |   `   |   1   |   2   |   3   |   4   |   5   |                                    |   6   |   7   |   8   |   9   |   0   |  DEL  |
            // |       |  F1   |  F2   |  F3   |  F4   |  F5   |                                    |  F6   |   -   |   =   |   [   |   ]   |   \   |
            // |       |  F7   |  F8   |  F9   |  F10  |  F11  |       |                    |       |  F12  |       | PSCRN | PG_DN | PG_UP |       |
            // |       |       |       |       |       |       |       |                    |       |       |       | NEXT  | VOL-  | VOL+  | PLAY  |

            bindings = <
&trans     &trans  &trans  &trans  &trans  &trans                    &trans  &trans     &trans     &trans    &trans     &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6  &kp N7     &kp N8     &kp N9    &kp N0     &kp DEL
&trans     &trans  &trans  &trans  &trans  &trans                    &trans  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
&trans     &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans     &trans    &kp SLASH  &trans
&trans     &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans     &trans    &trans     &trans
            >;
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |    `     |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
            // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
            // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
            // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
            // |          |          |          |          |          |          |          |                    |          |          |          |          |          |          |          |

            bindings = <
&kp PAGE_UP    &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                     &kp F6   &kp F7   &kp F8   &kp F9          &kp F10            &kp HOME
&kp PAGE_DOWN  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15                    &kp F16  &kp F17  &kp F18  &kp F19         &kp F20            &kp END
&trans         &trans   &trans   &trans   &trans   &trans                     &trans   &trans   &trans   &trans          &trans             &kp PRINTSCREEN
&trans         &trans   &trans   &trans   &trans   &trans   &trans    &trans  &trans   &trans   &trans   &trans          &kp C_VOLUME_UP    &kp C_PLAY_PAUSE
&trans         &trans   &trans   &trans   &trans   &trans   &trans    &trans  &trans   &trans   &trans   &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_NEXT
            >;
        };

        gaming_layer {
            bindings = <
&kp GRAVE  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5                                     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0        &kp DELETE
&kp ESC    &kp Q     &kp W     &kp E   &kp R      &kp T                                      &kp Y      &kp U      &kp I      &kp O     &kp P         &kp BSPC
&kp TAB    &kp A     &kp S     &kp D   &kp F      &kp G                                      &kp H      &kp J      &kp K      &kp L     &kp SEMI      &kp APOS
&kp LSHFT  &kp Z     &kp X     &kp C   &kp V      &kp B      &kp NON_US_BACKSLASH    &tog 4  &kp N      &kp M      &kp COMMA  &kp DOT   &kp UP_ARROW  &kp ENTER
&kp LCTRL  &kp LGUI  &kp LALT  &mo 3   &kp MINUS  &kp SPACE  &mo 2                   &mo 1   &kp SPACE  &kp EQUAL  &kp RCTRL  &kp LEFT  &kp DOWN      &kp RIGHT
            >;
        };
    };
};
